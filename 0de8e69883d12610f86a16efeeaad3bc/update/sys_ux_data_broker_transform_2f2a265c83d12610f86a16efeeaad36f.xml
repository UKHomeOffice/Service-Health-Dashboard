<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ux_data_broker_transform">
    <sys_ux_data_broker_transform action="INSERT_OR_UPDATE">
        <acl_failure_result/>
        <api_name>x_snc_service_he_0.childServices</api_name>
        <batch_exclude>false</batch_exclude>
        <description/>
        <mutates_server_data>false</mutates_server_data>
        <name>childServices</name>
        <output_schema/>
        <private>false</private>
        <props>[&#13;
{&#13;
  "name": "sysId",&#13;
  "label": "sysId",&#13;
  "description": "Sys ID of the parent service",&#13;
  "readOnly": false,&#13;
  "fieldType": "string",&#13;
  "mandatory": true,&#13;
  "defaultValue": ""&#13;
}&#13;
]</props>
        <required_translations>[ {
  "message" : "Sys ID of the parent service",
  "comment" : ""
}, {
  "message" : "sysId",
  "comment" : ""
} ]</required_translations>
        <schema_version>1.0.0</schema_version>
        <script><![CDATA[function transform(inputs) {
    var childServices = [];

    var childService = new GlideRecord("cmdb_ci_service");
	childService.addEncodedQuery('parent!=^parent=' + inputs.sysId);
    childService.query();

    while (childService.next()) {

        var obj = {
            "name": childService.getValue('name'),
            "color": getColor(childService),
            "link": "priority=1^ORpriority=2^business_service=" + childService.getValue("sys_id"),
            "parent": inputs.sysId
        };
        childServices.push(obj);
    }

    function getColor(service) {

        var color = "green";

        var ga = new GlideAggregate("incident");
        ga.addAggregate("COUNT");
        ga.addEncodedQuery("active=true^business_service=" + service.sys_id);
        ga.groupBy("priority");
        ga.orderBy("priority");
        ga.query();

        while (ga.next()) {
            if (ga.priority == "1") {
                return "red";
            } else if (ga.priority == "2") {
                return "orange";
            } else {
                return "green";
            }
        }
        return color;
    }


    return childServices;

}]]></script>
        <sys_class_name>sys_ux_data_broker_transform</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-04-30 07:10:29</sys_created_on>
        <sys_id>2f2a265c83d12610f86a16efeeaad36f</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>childServices</sys_name>
        <sys_package display_value="Service Health Dashboard" source="x_snc_service_he_0">0de8e69883d12610f86a16efeeaad3bc</sys_package>
        <sys_policy/>
        <sys_scope display_value="Service Health Dashboard">0de8e69883d12610f86a16efeeaad3bc</sys_scope>
        <sys_update_name>sys_ux_data_broker_transform_2f2a265c83d12610f86a16efeeaad36f</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-04-30 07:10:29</sys_updated_on>
    </sys_ux_data_broker_transform>
    <sys_translated_text action="delete_multiple" query="documentkey=2f2a265c83d12610f86a16efeeaad36f"/>
</record_update>
